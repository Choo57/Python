[config]
; Website config
WEBSITE_URL: https://coinmarketcap.com/
; ID of the cookie policy banner at the bottom of the page
CONSENT_PAGE_ID: //div[@id="cmc-cookie-policy-banner"]
; XPath to close the cookie policy banner at the bottom
CONSENT_CLOSE_XPATH: //div[@class='cmc-cookie-policy-banner__close']

; Ads window on lower right hand corner
ADS_CONTAINER: //div[contains(@class, 'cmc-event-popup__contents')]
; Ads container close button
ADS_CONTAINER_CLOSE: //*[contains(@class, 'close-button')]

; Selenium to wait until this tag gets rendered to understand in page loaded, before timing out
FIRST_LOAD_XPATH: //div[@class="cmc-body-wrapper"]
; Scroll to element
SCROLL_TO_ELEMENT: //table[contains(@class, 'cmc-table')]

; Coinmarketcap utilizes virtual scrolling and table contents are retrieved during scrolling. Use SCROLL_WHEN_INDEX to fetch table rows in batches. 
; SCROLL_WHEN_INDEX: 10 works well. Usually ~20 rows are fetched so too high of a threshold will result in stale element exceptions
SCROLL_WHEN_INDEX: 10

; There are 100 rows on each page. Change this if you want only a certain number of rows written to csv, e.g. first 20 rows
TOTAL_TABLE_ROWS_PER_PAGE: 100

; CHROME DRIVER FOR WINDOWS
CHROMEDRIVER_PATH: chromedriver_win32_113.0.5672.63.exe

OUTPUTFOLDER_PATH: ./output
BROWSER_SIZE: --window-size=1800,1500
IMAGE_WIDTH: 1800
IMAGE_HEIGHT: 1500
TIMEOUT: 20
POLLING_FREQUENCY: 0.1
